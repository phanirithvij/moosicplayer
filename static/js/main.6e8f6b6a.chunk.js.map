{"version":3,"sources":["assets/play.svg","assets/left.svg","assets/right.svg","utils/Analytics.tsx","components/Player/Player.types.tsx","components/Player/Player.tsx","App.tsx","serviceWorker.tsx","index.tsx","assets/pause.svg"],"names":["module","exports","__webpack_require__","p","Analytics","props","Object","classCallCheck","this","state","console","log","info","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","Data","api","status","sent","stop","AudioC","data","src","title","start","getAud","aud","document","querySelector","Error","Player","_useState","useState","_useState2","slicedToArray","audio","setAudio","useEffect","_useState3","pauseBtn","_useState4","currBtn","setCurrBtn","_useState5","_useState6","setAnalyzer","analyzer_","enabled","analytics","onpause","playBtn","onplay","react_default","createElement","id","autoPlay","controls","prevBtn","onClick","alert","alt","style","maxHeight","_e","paused","play","pause","nextBtn","s","get","window","GL_BL_DAA","App","setData","setSrc","src_","next1","next2","_callee2","result","_context2","components_Player_Player","type","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e8f6b6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.dcb8568c.svg\";","module.exports = __webpack_public_path__ + \"static/media/left.290174b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.1ee4c3ee.svg\";","import axios from \"axios\";\nimport { Data } from \"../App\";\n\nimport { AnalyticsConfig } from \"./Analytics.types\";\n\nclass Analytics {\n    state : Object = {};\n    constructor(props?:AnalyticsConfig){\n        (props) ? console.log(\"Recieved Props\", props) : null;\n        console.info(\"Analytics started\");\n        console.info(\"Establishing connection....\");\n        (async ()=>{\n            const result = await axios(Data.api.status);\n            // console.log(result.data);\n        })();\n    }\n};\n\nexport default Analytics;\n","export interface Audiodetails {\n\ttitle?    : string;\n\tduration? : number; \n\tsrc       : string;\n\tnext?     : Audiodetails;\n\tprev?     : Audiodetails;\n\tstart?    : AudioTimestamp;\n};\n\nexport interface PlayerProps {\n\tsrc : AudioC;\n\tanalytics?: boolean;\n};\n\nexport class AudioC implements Audiodetails{\n\tsrc    : string;\n\ttitle? : string;\n\tnext?  : AudioC;\n\tprev?  : AudioC;\n\tstart? : AudioTimestamp;\n\tconstructor(data:Audiodetails){\n\t\tthis.src = data.src;\n\t\tthis.next = data.next;\n\t\tthis.prev = data.prev;\n\t\tthis.title = data.title;\n\t\tthis.start = data.start;\n\t}\n}","import React, { useState, useEffect } from 'react';\r\nimport { MouseEvent } from 'react';\r\n\r\nimport './Player.css';\r\n\r\nimport Analytics from '../../utils/Analytics';\r\nimport { PlayerProps, AudioC } from './Player.types';\r\n\r\nimport pauseBtn from \"../../assets/pause.svg\";\r\nimport playBtn from \"../../assets/play.svg\";\r\nimport prevBtn from \"../../assets/left.svg\";\r\nimport nextBtn from \"../../assets/right.svg\";\r\n\r\nconst getAud = () : HTMLAudioElement => {\r\n\tconst aud : HTMLAudioElement | null = document.querySelector('#song');\r\n\tif (!aud){\r\n\t\tthrow Error(\"Audio is not here!!\");\r\n\t}\r\n\treturn aud;\r\n};\r\n\r\nconst Player = (props:PlayerProps) => {\r\n\tconst [audio, setAudio] = useState<AudioC>(new AudioC({\"src\":\"placeholder.mp3\"}));\r\n\tuseEffect(()=>{\r\n\t\tsetAudio(props.src);\r\n\t}, [props.src]);\r\n\tconsole.log(\"fresh player:\", props);\r\n\t/* \r\n\t\tconst [analyzer, setAnalyzer] = useState(new Analytics());\r\n\t\t// DON'T use this as a new analytics object is getting created after each state update.\r\n\t*/\r\n\tconst [currBtn, setCurrBtn] = useState(pauseBtn);\r\n\r\n\tconst [analyzer, setAnalyzer] = useState<Analytics>();\r\n\tuseEffect(()=>{\r\n\t\t(async ()=>{\r\n\t\t\tconst analyzer_ = await new Analytics({enabled:!!props.analytics});\r\n\t\t\tsetAnalyzer(analyzer_);\r\n\t\t})();\r\n\t}, []); /* only once */\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst aud = getAud();\r\n\t\taud.onpause = () => {\r\n\t\t\tconsole.log('paused');\r\n\t\t\tsetCurrBtn(playBtn);\r\n\t\t};\r\n\t\taud.onplay  = ()=>{\r\n\t\t\tconsole.log('played');\r\n\t\t\tsetCurrBtn(pauseBtn);\r\n\t\t};\r\n\t}, []); /* once */\r\n\r\n\tconst playNext = ()=>{\r\n\t\tconst next = audio.next;\r\n\t\tif (next){\r\n\t\t\tsetAudio(next);\r\n\t\t} else {\r\n\t\t\talert(\"Last song reached\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst playPrev = ()=>{\r\n\t\tconst prev = audio.prev;\r\n\t\tif (prev){\r\n\t\t\tsetAudio(prev);\r\n\t\t} else {\r\n\t\t\talert(\"First song reached\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst pausePlay = (_e: MouseEvent)=>{\r\n\t\tconst aud = getAud();\r\n\t\t(aud.paused) ? aud.play() : aud.pause();\r\n\t};\r\n\r\n\tconst changeSrc = (src:string, aud? : HTMLAudioElement)=>{\r\n\t\tconst aud_ = aud || getAud();\r\n\t\taud_.src = src;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"player\">\r\n\t\t\t{/* wrapper begins */}\r\n\t\t\t<div id=\"container\">\r\n\t\t\t\t<div id=\"audio-player\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taudio.src ?\r\n\t\t\t\t\t\t<audio id=\"song\" src={audio.src} autoPlay controls></audio>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<p>no audio provided</p>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"player-controls\">\r\n\t\t\t\t\t<div id=\"prev\">\r\n\t\t\t\t\t\t<img src={prevBtn} onClick={playPrev} alt=\"playprev\" style={{maxHeight: \"50px\"}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"play\">\r\n\t\t\t\t\t\t<img src={currBtn} onClick={pausePlay} alt=\"play.pause\" style={{maxHeight: \"50px\"}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"next\">\r\n\t\t\t\t\t\t<img src={nextBtn} onClick={playNext} alt=\"playnext\" style={{maxHeight: \"50px\"}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* wrapper ends */}\r\n\t\t\t{/* details begins */}\r\n\t\t\t<div id=\"details\">\r\n\t\t\t\t{\r\n\t\t\t\t\taudio.title ? <h2>{audio.title}</h2> : ''\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{/* details ends */}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from 'react';\nimport { MouseEvent, ChangeEvent } from 'react';\n\nimport './App.css';\n\nimport Player from './components/Player/Player';\n\nimport axios from 'axios';\nimport { AppProps, AppData } from './App.types';\nimport { AudioC } from './components/Player/Player.types';\n\ndeclare global {\n\tinterface Window {\n\t\t/* any modifications to window */\n\t\tGL_BL_DAA: AppData;\n\t}\n};\n\nexport const Data: AppData = {\n\ts: 0,\n\tapi: {\n\t\tget   : \"http://localhost:3000\",\n\t\tstatus: \"http://localhost:3000\",\n\t},\n};\n\nwindow.GL_BL_DAA = Data;\n\n// console.log(axios(Data.api.get));\n\nconst App = (props: AppProps) => {\n\tconst [title, setTitle] = useState(props.title);\n\tconst [data, setData] = useState(null);\n\tlet [src, setSrc] = useState<AudioC>(new AudioC({src:\"junk\"}));\n\n\tuseEffect(()=>{\n\t\t(async ()=>{\n\t\t\tconsole.log(\"reached here\");\n\t\t\t// const data = await axios(Data.api.get);\n\t\t\tconst src_ = new AudioC({\n\t\t\t\ttitle : \"Achhi Muite by Swimy\",\n\t\t\t\tsrc   :`https://res.cloudinary.com/rootworld/video/upload/v1530081026/\\\n\t\t\t\t\t\tsoundcloud_acchi_muite_rally_jaxx.mp3`,\n\t\t\t});\n\t\t\tconst next1 = new AudioC({\n\t\t\t\tprev  : src_,\n\t\t\t\ttitle : \"Obeying Thermodynamics by Homer Simpsons\",\n\t\t\t\tsrc   : \"https://res.cloudinary.com/rootworld/video/upload/v1544685814/sample.wav\",\n\t\t\t});\n\t\t\tconst next2 = new AudioC({\n\t\t\t\tprev  : next1,\n\t\t\t\ttitle : \"Just Awake by Fear,Loathing in LasVegas\",\n\t\t\t\tsrc   : \"https://res.cloudinary.com/rootworld/video/upload/v1522342267/01_-_Just_Awake.mp3\",\n\t\t\t});\n\t\t\t/* \n\t\t\t...\n\t\t\tnext2.next = next3;\n\t\t\t*/\n\t\t\tnext1.next = next2;\n\t\t\tsrc_.next = next1;\n\t\t\tsetSrc(src_);\n\t\t})();\n\t}, []); /* [] => once after mount */\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tconst result = await axios(Data.api.get);\n\t\t\tsetData(result.data);\n\t\t\tconsole.log(\"result\");\n\t\t})();\n\t}, []); /* pass [] for once */\n\n\tuseEffect(()=>{\n\t\t// const doc : HTMLInputElement = document.querySelector('#dropzone');\n\t\t// doc.ondrop = (e:DragEvent)=>{\n\t\t// \tvar sound : HTMLAudioElement | null = document.querySelector('#sound');\n\t\t// \tsound.src = URL.createObjectURL(e.target.files[0]);\n\t\t// \t// not really needed in this exact case, but since it is really important in other cases,\n\t\t// \t// don't forget to revoke the blobURI when you don't need it\n\t\t// \tsound.onend = function(e) {\n\t\t// \t  URL.revokeObjectURL(this.src);\n\t\t// \t}\n\t\t// }\n\t}, []);\n\n\treturn (\n\t\t<div id=\"App\">\n\t\t\t<Player src={src} analytics={false}/>\n\t\t\t<input type=\"file\" id=\"dropzone\"/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\ninterface ConfigS {\n\tonUpdate(registration : ServiceWorkerRegistration) : void;\n\tonSuccess(registration : ServiceWorkerRegistration) : void;\n}\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config: ConfigS) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\tif (isLocalhost) {\n\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t// service worker/PWA documentation.\n\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\tconsole.log(\n\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\t// Is not localhost. Just register service worker\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config:ConfigS) {\n\tnavigator.serviceWorker\n\t.register(swUrl)\n\t.then(registration => {\n\t\tregistration.onupdatefound = () => {\n\t\t\tconst installingWorker = registration.installing;\n\t\t\tif (installingWorker == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t})\n\t.catch(error => {\n\t\tconsole.error('Error during service worker registration:', error);\n\t});\n}\n\nfunction checkValidServiceWorker(swUrl:string, config:ConfigS) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t.then(response => {\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t) {\n\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// Service worker found. Proceed as normal.\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t})\n\t.catch(() => {\n\t\tconsole.log(\n\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t);\n\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App title={\"Moosic Player\"} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pause.0a0374f8.svg\";"],"sourceRoot":""}